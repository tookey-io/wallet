// AUTO GENERATED FILE, DO NOT EDIT.
// Generated by `flutter_rust_bridge`@ 1.68.0.
// ignore_for_file: non_constant_identifier_names, unused_element, duplicate_ignore, directives_ordering, curly_braces_in_flow_control_structures, unnecessary_lambdas, slash_for_doc_comments, prefer_const_literals_to_create_immutables, implicit_dynamic_list_literal, duplicate_import, unused_import, unnecessary_import, prefer_single_quotes, prefer_const_constructors, use_super_parameters, always_use_package_imports, annotate_overrides, invalid_use_of_protected_member, constant_identifier_names, invalid_use_of_internal_member, prefer_is_empty, unnecessary_const

import "bridge_definitions.dart";
import 'dart:convert';
import 'dart:async';
import 'package:meta/meta.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge.dart';
import 'bridge_generated.dart';
export 'bridge_generated.dart';

class NativePlatform extends FlutterRustBridgeBase<NativeWire>
    with FlutterRustBridgeSetupMixin {
  NativePlatform(FutureOr<WasmModule> dylib) : super(NativeWire(dylib)) {
    setupMixinConstructor();
  }
  Future<void> setup() => inner.init;

// Section: api2wire

  @protected
  String api2wire_String(String raw) {
    return raw;
  }

  @protected
  List<dynamic> api2wire_box_autoadd_keygen_params(KeygenParams raw) {
    return api2wire_keygen_params(raw);
  }

  @protected
  List<dynamic> api2wire_box_autoadd_sign_params(SignParams raw) {
    return api2wire_sign_params(raw);
  }

  @protected
  List<dynamic> api2wire_keygen_params(KeygenParams raw) {
    return [
      api2wire_String(raw.roomId),
      api2wire_u16(raw.participantIndex),
      api2wire_u16(raw.participantsCount),
      api2wire_u16(raw.participantsThreshold),
      api2wire_String(raw.relayAddress),
      api2wire_u16(raw.timeoutSeconds)
    ];
  }

  @protected
  List<dynamic> api2wire_sign_params(SignParams raw) {
    return [
      api2wire_String(raw.roomId),
      api2wire_String(raw.key),
      api2wire_String(raw.data),
      api2wire_uint_16_list(raw.participantsIndexes),
      api2wire_String(raw.relayAddress),
      api2wire_u16(raw.timeoutSeconds)
    ];
  }

  @protected
  Uint16List api2wire_uint_16_list(Uint16List raw) {
    return raw;
  }

  @protected
  Uint8List api2wire_uint_8_list(Uint8List raw) {
    return raw;
  }
// Section: finalizer
}

// Section: WASM wire module

@JS('wasm_bindgen')
external NativeWasmModule get wasmModule;

@JS()
@anonymous
class NativeWasmModule implements WasmModule {
  external Object /* Promise */ call([String? moduleName]);
  external NativeWasmModule bind(dynamic thisArg, String moduleName);
  external dynamic /* void */ wire_connect_logger(NativePortType port_);

  external dynamic /* void */ wire_public_key_to_ethereum_address(
      NativePortType port_, String public_key);

  external dynamic /* void */ wire_private_key_to_public_key(
      NativePortType port_, String private_key, bool compressed);

  external dynamic /* void */ wire_private_key_to_ethereum_address(
      NativePortType port_, String private_key);

  external dynamic /* void */ wire_transaction_to_message_hash(
      NativePortType port_, String tx_request);

  external dynamic /* void */ wire_message_to_hash(
      NativePortType port_, String data);

  external dynamic /* void */ wire_encode_message_signature(
      NativePortType port_,
      String message_hash,
      int chain_id,
      String signature_recid);

  external dynamic /* void */ wire_encode_transaction(
      NativePortType port_, String tx_request, String signature_recid);

  external dynamic /* void */ wire_keygen(
      NativePortType port_, List<dynamic> params);

  external dynamic /* void */ wire_sign(
      NativePortType port_, List<dynamic> params);
}

// Section: WASM wire connector

class NativeWire extends FlutterRustBridgeWasmWireBase<NativeWasmModule> {
  NativeWire(FutureOr<WasmModule> module)
      : super(WasmModule.cast<NativeWasmModule>(module));

  void wire_connect_logger(NativePortType port_) =>
      wasmModule.wire_connect_logger(port_);

  void wire_public_key_to_ethereum_address(
          NativePortType port_, String public_key) =>
      wasmModule.wire_public_key_to_ethereum_address(port_, public_key);

  void wire_private_key_to_public_key(
          NativePortType port_, String private_key, bool compressed) =>
      wasmModule.wire_private_key_to_public_key(port_, private_key, compressed);

  void wire_private_key_to_ethereum_address(
          NativePortType port_, String private_key) =>
      wasmModule.wire_private_key_to_ethereum_address(port_, private_key);

  void wire_transaction_to_message_hash(
          NativePortType port_, String tx_request) =>
      wasmModule.wire_transaction_to_message_hash(port_, tx_request);

  void wire_message_to_hash(NativePortType port_, String data) =>
      wasmModule.wire_message_to_hash(port_, data);

  void wire_encode_message_signature(NativePortType port_, String message_hash,
          int chain_id, String signature_recid) =>
      wasmModule.wire_encode_message_signature(
          port_, message_hash, chain_id, signature_recid);

  void wire_encode_transaction(
          NativePortType port_, String tx_request, String signature_recid) =>
      wasmModule.wire_encode_transaction(port_, tx_request, signature_recid);

  void wire_keygen(NativePortType port_, List<dynamic> params) =>
      wasmModule.wire_keygen(port_, params);

  void wire_sign(NativePortType port_, List<dynamic> params) =>
      wasmModule.wire_sign(port_, params);
}
